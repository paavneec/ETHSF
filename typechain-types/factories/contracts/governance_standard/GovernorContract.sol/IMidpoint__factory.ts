/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMidpoint,
  IMidpointInterface,
} from "../../../../contracts/governance_standard/GovernorContract.sol/IMidpoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "midpointId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "callMidpoint",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IMidpoint__factory {
  static readonly abi = _abi;
  static createInterface(): IMidpointInterface {
    return new utils.Interface(_abi) as IMidpointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMidpoint {
    return new Contract(address, _abi, signerOrProvider) as IMidpoint;
  }
}
